4일차

ICMP 기능 : 1 질의 메시지
           2 오류 보고 메시지


ICMP의 메시지 유형
icmp type 

0 : echo 응답 (echo reply) -> 핑 응답 : ip 호스트 진단

8 : echo 요청 (echo request) -> 핑 요청 : ip 호스트 진단

3 : 수신처 도달 불가능 (Destination Unreachable) : 목적지 도달 불가능 알림

4 : 발신 제한 (source quench) : 네트워크가 혼잡하여 데이터 폐기 알림

5 : 라우터 변경 (redirect) : 라우터가 최적 경로를 사용하지 않는 호스트 발견시 대체 경로를 알려주는 용도

11 : 시간 초과 (time exceeded) : TTL이 0이 되서 더이상 전송이 안된다는 사실을 알림

12 : 파라미터 불량 (parameter problem) : 헤더 값에 문제가 있을시 알림

13 : 타임 스탬프 요청 (timestamp request) : 
                                      -> 오고가는데 필요한 왕복 시간 확인
14 : 타임 스탬프 응답 (timestamp reply) : 

15 : 정보 요구 : (information request) :
                                     -> ip가 없는 호스트에서 ip 설정을 위해 ip 등을 요청할때
16 : 정보 응답 : (information replay)

17 : 주소 마스크 요구 : adrress mask request   
                                           ->호스트가 라우터 등에게 서브넷 마스크 요청할때 사용
18 : 주소 마스크 응답 : address mask repley
 
---------------------------------------

ICMP 기능 : 1 질의 메시지 -> 0 , 8 , 13 ,14 ,15 ,16 ,17 ,18 ,9, 10.....
           2 오류 보고 메시지 -> 3, 4, 5, 11, 12

----------------------------------------
icmp.pcap

1.icmp 요청을 한 호스트와 대상의 ip는?
2.icmp 패킷의 ttl 값을 통해 os를 추측해 보자
3. icmp 요청/응답의 icmp type 및 코드를 확인해보세요.
4. icmp 요청/응답에 포함된 data 크기를 확인해보세요.

icmp2.pcap
icmp 요청한 호스트와 대상의 ip는?
icmp 요청/응답의 type 및 code는?
패킷 분석 결과 알 수 있는 것은? (위의 결과로 알 수 있는 것?)

ip_fragment.pcap
1. 두호스트가 주고 받은 요청/응답의 종류는?
2. 각 패킷별 fragment 정보를 확인할 수 있는 부분은?
3. 각 패킷별 fragment offset은?
4. fragment 된 패킷의 데이터를 합칠경우 데이터의 길이는?

---------------------------------------------------------------------
데이터베이스 서비스

데이터베이스 : 여러 사람에 의해 공유되어 사용될 목적으로 통합하여 관리되는 데이터의 집합

DBMS : 데이터베이스를 관리하는 것

-> MYSQL(MARIADB), ORACLE, MSSQL(SQL SERVER)

RDBMS(관계형 데이터베이스)

데이터를 로우(Row, 행, 줄)와 컬럼(Column, 열, 칸)이라는 일종의 표형태로 저장한다.

SQL : 관계형 데이터베스를 이용하기 위한 표준 언어

-----------------------------------------
데이터 : 하나하나의 자료들
테이블 : 데이터를 표형식으로 만든 것
데이터베이스 : 데이터를 저장한 것
DBMS : 데이터베이스를 관리하는 것
레코드 : 테이블의 가로 , 이름이 없다.
컬럼(열, 필드) 테이블의 세로, 이름이 있다. 데이터 타입이 설정됨(숫자,문자)

PK(Primary Key) = 주요키 : 레코드를 식별하는 유일한 값을 갖고 있는 비어있지 않은 컬럼

FK = 외래키 : 다른 테이블의 주요키와 대응되는 컬럼

SQL : 관계형 데이터베스를 이용하기 위한 표준 언어(구조화된 질의 언어)
         DB에서 정보를 얻거나, 조작하거나, 갱신하는 등의 역할을 하는 언어

---------------------------------------------------------------------------

데이터베이스 관련 SQL

SHOW DATABASE;
데이터베이스들 이름 조회

USE 데이터베이스이름;
사용할 DB 선택

DB 생성 삭제
CREATE DATABASE 데이터베이스이름;
DROP DATABASE 데이터베이스이름;
------------------------------------------------------
테이블 관련 SQL

SHOW TABLES;
테이블 조회

EXPLAIN 테이블이름;  
DESC 테이블이름;  
테이블 정보 확인

CREATE TABLE 테이블이름 (필드이름1 필드타입 필드이름2 필드타입2 .....);

예시 :
CREATE DATABSE member_db;

USE member_db;

CREATE TABLE member (
id varchar(12) NOT NULL PRIMARY KEY,
name NVARCHAR(5),
age int,
address NVARCHAR(5) );

---------------------------------------------------------
DROP TABLE 테이블이름

ALTER TABLE 테이블이름 옵션 ~~~~~~
예) ALTER TABLE 테이블이름 ADD 컬럼이름 타입

ALTER TABLE member ADD COLUMN memberidx INT;

----------------------------------------------------
데이터 형의 종류

VARCHAR(n) : 가변길이문자열
CHAR(n) : 고정 길이 문자열
INT : 정수형 숫자          
FLOAT : 실수형 숫자    
DATE : 날짜를 저장함  
TIME : 시간을 저장함
----------------------------------------------

레코드 삽입 / 삭제 / 수정

insert into 테이블이름 values (값1,값2...);

예 : insert into member values('hong','홍길동',22,'경기');


update 테이블이름 set 필드이름1=수정값, 필드이름=수정값.... where 필터링조건;

예 : update member set age =50 where id = 'kim';

delete from 테이블이름 where 필터링조건;

-------------------------------------------------------
테이블 조회

SELECT 필드이름1, 필드이름2... FROM 테이블이름 WHERE 조건

select * from 테이블이름
----------------------------------------------------------------
su - root

wget http://70.12.113.49:8080/common.rpm
wget http://70.12.113.49:8080/client.rpm
wget http://70.12.113.49:8080/server.rpm

yum -y remove mariadb-libs

yum -y localinstall *.rpm

-------------------------------------------------

systemctl restart mysql

chkconfig mysql on

firewall-cmd --permanent --add-port=3306/tcp
firewall-cmd --reload
--------------------------------
mysql -u root -p

show databases;

exit

mysqladmin -u root password '1234'

mysql -u root -p

show databases;
use mysql;

SELECT user, host FROM user WHERE user NOT LIKE '';

원격에서 접속할 수있는 test 

GRANT ALL PRIVILEGES ON *.* TO test@'%.%.%.%' IDENTIFIED by '1234';


--------------------------
윈도우 클라이언트

mysql -h 서버ip -u test -p

1234

--------------------------------------------------------------
기초 SQL 연습

show databases;

CREATE DATABASE member_db;

show databases;

USE member_db;

SHOW TABLES;

CREATE TABLE member (
id varchar(12) NOT NULL PRIMARY KEY,
name NVARCHAR(5),
age int,
address NVARCHAR(5) );

DESC member;
DESCRIBE
EXPLAIN

INSERT INTO member VALUES ('kim', '김철수', 35, '서울');
INSERT INTO member VALUES ('lee', '이호성', 30, '서울');
INSERT INTO member VALUES ('park', '박지성', 20, '부산');
INSERT INTO member VALUES ('joe', '조인영', 40, '대구');

SELECT * FROM member;

SELECT * FROM member where id ='kim';

id가 kim인 사람의 나이는?

SELECT age FROM member where id ='kim';

조인영씨 나이를 50으로 바꾸기

update member set age=50 where id = 'joe';
SELECT * FROM member;

나이가 40보다 작은 사람 조회하기

SELECT * FROM member where age < 40;

============================================

클라우드 : 물리적 서버를 구입하는 대신, 클라우드 공급자로부터 필요한 컴퓨팅 파워, 스토리, 데이터베이스 등을 빌려와 사용함

클라우드의 종류
서비스 수준
IaaS (Infrastructure as a Service)
PaaS (Platforam as a Service)
SaaS (Software as a Service)

접근 권한
퍼블릭 클라우드
프라이빗 클라우드

서비스 특수성
범용 클라우드
전용 클라우드

-------------------------------------------------------------
ec2  컴퓨팅자원 서비스
s3   스토리지
cloudfront   CDN(Contents Delivery Network)


chmod 400 key파일(pem파일)
ssh -i  test.pem ubuntu@13.124.111.34  (우분투)
ssh -i  test.pem ec2-user@13.124.111.34  (아마존 리눅스)

---------------------------------------------------------

s3 : 파일을 저장해서 보관해주는 서비스
 - 고장나지 않는 저장공간
 - 분산 저장되며 저장이 버전별로 관리된다.
 - 파일 서버로 사용가능
 - 정적 웹사이트 호스팅 지원

버켓 :  하나의 프로젝트
폴더 : 버켓안에 폴더가 있다
오브젝트 : 파일이라고 보면된다. (파일 + 기타정보)


CDN : 캐시서버의 기능
         전세계에 빠르게 데이터를 전달

origin  :  http://sshacker.s3-website.ap-northeast-2.amazonaws.com/


sshacker.s3-website.ap-northeast-2.amazonaws.com/admin/index.html
d20qucqwqd6cwl.cloudfront.net


